---
import translate from '$i18n/translate';
import tPage from '$i18n/translations/pages/news';
import Page from '$layouts/Page.astro';
import getLocaleFromPath from '$lib/getLocaleFromPath';
import localeStaticPaths from '$lib/localeStaticPaths';
import { getCollection } from 'astro:content';
import relativePath from '$lib/relativePath';

const allNews = await getCollection('news');
const locale = getLocaleFromPath(Astro.url.pathname);
const allNewsInLocale = allNews.filter(isInLocale);
const t = translate(locale);

function isInLocale(newsItem: (typeof allNews)[number]) {
  const srcPath = newsItem.id;
  const newsItemLocale = srcPath.slice(0, srcPath.indexOf('/'));
  return newsItemLocale === locale;
}

export async function getStaticPaths() {
  return localeStaticPaths;
}
---

<Page title={t(tPage, { key: 'title' })}>
  <section>
    <h1>{t(tPage, { key: 'title' })}</h1>
    <div class="news-index">
      {
        allNewsInLocale.length > 0 ? (
          allNewsInLocale.map((item) => (
            <a
              class="news-index__item"
              href={relativePath(Astro.url.pathname, item.slug.replace('/', '-'))}
            >
              <h2>{item.data.title}</h2>
              <p>{item.data.summary}</p>
              <p class="link">{t(tPage, { key: 'read-article' })}</p>
            </a>
          ))
        ) : (
          <p>{t(tPage, { key: 'no-news' })}</p>
        )
      }
    </div>
  </section>
</Page>
